#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source .fonctions
source /usr/share/yunohost/helpers
set -eu

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

ynh_check_error	# Active trap pour arrêter le script si une erreur est détectée.

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

app=$YNH_APP_INSTANCE_NAME

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC
admin_name=$YNH_APP_ARG_ADMIN_NAME
admin_pass=$YNH_APP_ARG_ADMIN_PASS
admin_email=$YNH_APP_ARG_ADMIN_EMAIL

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Normalize the url path syntax
path_url=$(ynh_normalize_url_path $path_url)

# Check web path availability
ynh_webpath_available $domain $path_url
# Register (book) web path
ynh_webpath_register $app $domain $path_url

#=================================================
# Install dependencies using Helpers
#=================================================
ynh_package_install_from_equivs ../conf/abantecart-deps.control \
|| ynh_die "Unable to install dependencies"

#=================================================
# Check password strength
#=================================================

[[ ${#admin_pass} -gt 5 ]] || ynh_die \
"The password is too weak, it must be longer than 5 characters"

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

user="$app"
ynh_app_setting_set "$app" is_public "$is_public"
ynh_app_setting_set "$app" admin_pass "$admin_pass"
ynh_app_setting_set "$app" admin_name "$admin_name"
ynh_app_setting_set "$app" admin_email "$admin_email"

#=================================================
# Initialize database as needed
#=================================================

db_name=$(ynh_sanitize_dbid $app)
ynh_app_setting_set $app db_name $db_name
ynh_mysql_setup_db $db_name $db_name

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

ynh_app_setting_set $app final_path $final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source "$final_path"

#=================================================
# SPECIFIC SETUP
#=================================================
# Cleaning
#=================================================

ynh_secure_remove $final_path/tests
ynh_secure_remove $final_path/install.txt
mv $final_path/public_html/* $final_path/
ynh_secure_remove $final_path/public_html

#=================================================
# CLI installation
#=================================================

pushd $final_path/install/
sudo php cli_install.php install \
       --db_host=localhost \
       --db_user=$db_name \
       --db_password=$db_pwd \
       --db_name=$db_name \
       --db_driver=amysqli \
       --db_port=3306 \
       --username=$admin_name \
       --password=$admin_pass \
       --email=$admin_email \
       --http_server=$domain$path_url \
       --db_prefix=_ac_ \
       --admin_path=admin
popd

#=================================================
# Cleaning
#=================================================

ynh_secure_remove /var/www/$app/install/

#=================================================
# CREATE DEDICATED USER
#=================================================

# Create a system user
ynh_system_user_create $app

#=================================================
# Set permissions
#=================================================

# file owned by application user before checking permissions
chown $app:$app $final_path -R

#=================================================
# NGINX CONFIGURATION
#=================================================

# Create a dedicated nginx config
ynh_add_nginx_config
if [ "$path_url" != "/" ]
then
	ynh_replace_string "^#sub_path_only" "" "/etc/nginx/conf.d/$domain.d/$app.conf"
fi
ynh_store_file_checksum "/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# PHP-FPM CONFIGURATION
#=================================================

# Create a dedicated php-fpm config
ynh_add_fpm_config

#=================================================
# SETUP SSOWAT
#=================================================

if [ $is_public -eq 0 ]
then	# Remove the public access
	ynh_app_setting_delete $app skipped_uris
fi
# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	ynh_app_setting_set $app unprotected_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================

systemctl reload nginx
